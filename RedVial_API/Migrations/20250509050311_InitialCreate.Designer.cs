// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedVial_API.Data;

#nullable disable

namespace RedVial_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509050311_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedVial_API.Models.Interseccion", b =>
                {
                    b.Property<int>("IdInterseccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInterseccion"));

                    b.Property<int>("CantidadVehiculosEspera")
                        .HasColumnType("int");

                    b.Property<string>("NombreVia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Semaforo")
                        .HasColumnType("bit");

                    b.Property<int>("TiempoPromedioTransito")
                        .HasColumnType("int");

                    b.Property<string>("TipoViaEste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoViaNorte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoViaOeste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoViaSur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInterseccion");

                    b.ToTable("Intersecciones");
                });

            modelBuilder.Entity("RedVial_API.Models.Ruta", b =>
                {
                    b.Property<int>("IdRuta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRuta"));

                    b.Property<int>("IdVia")
                        .HasColumnType("int");

                    b.Property<int>("InterseccionDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("InterseccionOrigenId")
                        .HasColumnType("int");

                    b.HasKey("IdRuta");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("RedVial_API.Models.Via", b =>
                {
                    b.Property<int>("IdVia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVia"));

                    b.Property<string>("NombreVia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Unidireccional")
                        .HasColumnType("bit");

                    b.HasKey("IdVia");

                    b.ToTable("Vias");
                });
#pragma warning restore 612, 618
        }
    }
}
